Grammar

    0 $accept: program $end

    1 program: list

    2 list: list_basic
    3     | list list_basic

    4 list_basic: func_decl
    5           | stmt

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP block
    7          | FUNCTION IDENTIFIER LP RP block

    8 argument_list: primary
    9              | argument_list COMMA primary

   10 block: LB list RB

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP SC

   12 return_stmt: RETURN expr_stmt

   13 stmt: expr_stmt
   14     | loop_stmt
   15     | return_stmt
   16     | block
   17     | set_pull
   18     | set_push
   19     | print_stmt
   20     | delete_stmt
   21     | assn_stmt
   22     | if_stmt

   23 if_stmt: IF LP expr RP stmt
   24        | IF LP expr RP stmt ELSE stmt

   25 loop_stmt: for_stmt
   26          | while_stmt

   27 while_stmt: WHILE LP expr RP block
   28           | WHILE LP expr RP expr_stmt

   29 for_stmt: FOR LP assn_stmt expr_stmt expr RP stmt
   30         | FOR LP assn_stmt SC expr RP stmt
   31         | FOR LP assn_stmt expr_stmt assn_stmt RP stmt
   32         | iterative_for

   33 iterative_for: FOR LP IDENTIFIER COLON SET RP expr_stmt
   34              | FOR LP IDENTIFIER COLON SET_IDE RP block
   35              | FOR LP IDENTIFIER COLON SET RP block

   36 print_stmt: PRINT LP expr RP SC
   37           | PRINT LP STRING RP SC

   38 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list RP

   39 assn_stmt: string_assn SC
   40          | set_assn SC
   41          | number_assn SC

   42 expr_stmt: expr SC

   43 expr: number_expr
   44     | set_expr

   45 string_assn: STR_IDE ASSN_OP STRING
   46            | STR_IDE ASSN_OP INPUT LP RP
   47            | STR_IDE ASSN_OP INPUT LP STRING RP
   48            | STR_IDE ASSN_OP STR_IDE
   49            | FUNC STR_IDE LP argument_list RP
   50            | FUNC STR_IDE LP RP

   51 number_assn: IDENTIFIER ASSN_OP number_expr

   52 number_expr: number_expr general_comp_op number_addt
   53            | number_addt

   54 number_addt: number_addt basic_addition_op number_mult
   55            | number_mult

   56 number_mult: number_mult basic_multiplication_op number_call
   57            | number_call

   58 number_call: FUNC IDENTIFIER LP argument_list RP
   59            | FUNC IDENTIFIER LP RP
   60            | number_basic

   61 number_basic: NUMBER
   62             | IDENTIFIER
   63             | LP number_expr RP
   64             | set_size
   65             | INPUT LP RP
   66             | INPUT LP STRING RP

   67 set_assn: SET_IDE ASSN_OP set_expr
   68         | IDENTIFIER ASSN_OP set_expr

   69 set_expr: set_expr general_comp_op set_arith
   70         | set_arith

   71 set_arith: set_arith set_arith_op set_unary
   72          | set_unary

   73 set_unary: set_unary_op set_basic
   74          | set_call

   75 set_call: FUNC SET_IDE LP argument_list RP
   76         | FUNC SET_IDE LP RP
   77         | set_basic

   78 set_basic: SET
   79          | SET_IDE
   80          | LP set_expr RP
   81          | contain_expr

   82 SET: SET_INIT
   83    | LB argument_list RB

   84 set_pull: SET_IDE PULL_OP primary SC

   85 set_push: SET_IDE PUSH_OP primary SC

   86 set_size: CARDINALITY_OP SET_IDE
   87         | CARDINALITY_OP SET

   88 general_comp_op: LT
   89                | LEQ
   90                | GT
   91                | GEQ
   92                | EE
   93                | NE
   94                | OR
   95                | AND

   96 set_arith_op: UNION_OP
   97             | INTERSECTION_OP
   98             | DIFF_OP
   99             | CARTESIAN_OP

  100 set_unary_op: POWERSET_OP

  101 basic_addition_op: PLUS_OP
  102                  | MINUS_OP

  103 basic_multiplication_op: MULTIPLY_OP
  104                        | DIVIDE_OP
  105                        | MOD_OP

  106 primary: NUMBER
  107        | STRING
  108        | IDENTIFIER
  109        | SET_IDE
  110        | STR_IDE
  111        | SET


Terminals, with rules where they appear

$end (0) 0
error (256)
WHILE (258) 27 28
FUNC (259) 49 50 58 59 75 76
SET_IDE (260) 11 34 38 67 75 76 79 84 85 86 109
STR_IDE (261) 45 46 47 48 49 50 110
FOR (262) 29 30 31 33 34 35
RETURN (263) 12
PRINT (264) 36 37
IF (265) 23 24
ELSE (266) 24
FUNCTION (267) 6 7
IDENTIFIER (268) 6 7 33 34 35 51 58 59 62 68 108
NUMBER (269) 61 106
STRING (270) 37 45 47 66 107
SET_INIT (271) 82
INPUT (272) 46 47 65 66
ASSN_OP (273) 45 46 47 48 51 67 68
DIFF_OP (274) 98
UNION_OP (275) 96
CARTESIAN_OP (276) 99
INTERSECTION_OP (277) 97
PULL_OP (278) 84
PUSH_OP (279) 85
CARDINALITY_OP (280) 86 87
POWERSET_OP (281) 100
SET_CONTAINS (282) 38
SET_DELETE (283) 11
LP (284) 6 7 11 23 24 27 28 29 30 31 33 34 35 36 37 38 46 47 49 50
    58 59 63 65 66 75 76 80
RP (285) 6 7 11 23 24 27 28 29 30 31 33 34 35 36 37 38 46 47 49 50
    58 59 63 65 66 75 76 80
LB (286) 10 83
RB (287) 10 83
COMMA (288) 9
COLON (289) 33 34 35
SC (290) 11 30 36 37 39 40 41 42 84 85
PLUS_OP (291) 101
MULTIPLY_OP (292) 103
DIVIDE_OP (293) 104
MOD_OP (294) 105
MINUS_OP (295) 102
AND (296) 95
OR (297) 94
LT (298) 88
LEQ (299) 89
GT (300) 90
GEQ (301) 91
EE (302) 92
NE (303) 93
ARROW (304) 11 38
LESS_ELSE (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1, on right: 0
list (53)
    on left: 2 3, on right: 1 3 10
list_basic (54)
    on left: 4 5, on right: 2 3
func_decl (55)
    on left: 6 7, on right: 4
argument_list (56)
    on left: 8 9, on right: 6 9 38 49 58 75 83
block (57)
    on left: 10, on right: 6 7 16 27 34 35
delete_stmt (58)
    on left: 11, on right: 20
return_stmt (59)
    on left: 12, on right: 15
stmt (60)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 5 23 24 29 30
    31
if_stmt (61)
    on left: 23 24, on right: 22
loop_stmt (62)
    on left: 25 26, on right: 14
while_stmt (63)
    on left: 27 28, on right: 26
for_stmt (64)
    on left: 29 30 31 32, on right: 25
iterative_for (65)
    on left: 33 34 35, on right: 32
print_stmt (66)
    on left: 36 37, on right: 19
contain_expr (67)
    on left: 38, on right: 81
assn_stmt (68)
    on left: 39 40 41, on right: 21 29 30 31
expr_stmt (69)
    on left: 42, on right: 12 13 28 29 31 33
expr (70)
    on left: 43 44, on right: 23 24 27 28 29 30 36 42
string_assn (71)
    on left: 45 46 47 48 49 50, on right: 39
number_assn (72)
    on left: 51, on right: 41
number_expr (73)
    on left: 52 53, on right: 43 51 52 63
number_addt (74)
    on left: 54 55, on right: 52 53 54
number_mult (75)
    on left: 56 57, on right: 54 55 56
number_call (76)
    on left: 58 59 60, on right: 56 57
number_basic (77)
    on left: 61 62 63 64 65 66, on right: 60
set_assn (78)
    on left: 67 68, on right: 40
set_expr (79)
    on left: 69 70, on right: 44 67 68 69 80
set_arith (80)
    on left: 71 72, on right: 69 70 71
set_unary (81)
    on left: 73 74, on right: 71 72
set_call (82)
    on left: 75 76 77, on right: 74
set_basic (83)
    on left: 78 79 80 81, on right: 73 77
SET (84)
    on left: 82 83, on right: 33 35 78 87 111
set_pull (85)
    on left: 84, on right: 17
set_push (86)
    on left: 85, on right: 18
set_size (87)
    on left: 86 87, on right: 64
general_comp_op (88)
    on left: 88 89 90 91 92 93 94 95, on right: 52 69
set_arith_op (89)
    on left: 96 97 98 99, on right: 71
set_unary_op (90)
    on left: 100, on right: 73
basic_addition_op (91)
    on left: 101 102, on right: 54
basic_multiplication_op (92)
    on left: 103 104 105, on right: 56
primary (93)
    on left: 106 107 108 109 110 111, on right: 8 9 84 85


state 0

    0 $accept: . program $end

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    FUNCTION        shift, and go to state 9
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    program        go to state 18
    list           go to state 19
    list_basic     go to state 20
    func_decl      go to state 21
    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 25
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 1

   27 while_stmt: WHILE . LP expr RP block
   28           | WHILE . LP expr RP expr_stmt

    LP  shift, and go to state 54


state 2

   49 string_assn: FUNC . STR_IDE LP argument_list RP
   50            | FUNC . STR_IDE LP RP
   58 number_call: FUNC . IDENTIFIER LP argument_list RP
   59            | FUNC . IDENTIFIER LP RP
   75 set_call: FUNC . SET_IDE LP argument_list RP
   76         | FUNC . SET_IDE LP RP

    SET_IDE     shift, and go to state 55
    STR_IDE     shift, and go to state 56
    IDENTIFIER  shift, and go to state 57


state 3

   11 delete_stmt: SET_IDE . ARROW SET_DELETE LP RP SC
   38 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   67 set_assn: SET_IDE . ASSN_OP set_expr
   79 set_basic: SET_IDE .
   84 set_pull: SET_IDE . PULL_OP primary SC
   85 set_push: SET_IDE . PUSH_OP primary SC

    ASSN_OP  shift, and go to state 58
    PULL_OP  shift, and go to state 59
    PUSH_OP  shift, and go to state 60
    ARROW    shift, and go to state 61

    $default  reduce using rule 79 (set_basic)


state 4

   45 string_assn: STR_IDE . ASSN_OP STRING
   46            | STR_IDE . ASSN_OP INPUT LP RP
   47            | STR_IDE . ASSN_OP INPUT LP STRING RP
   48            | STR_IDE . ASSN_OP STR_IDE

    ASSN_OP  shift, and go to state 62


state 5

   29 for_stmt: FOR . LP assn_stmt expr_stmt expr RP stmt
   30         | FOR . LP assn_stmt SC expr RP stmt
   31         | FOR . LP assn_stmt expr_stmt assn_stmt RP stmt
   33 iterative_for: FOR . LP IDENTIFIER COLON SET RP expr_stmt
   34              | FOR . LP IDENTIFIER COLON SET_IDE RP block
   35              | FOR . LP IDENTIFIER COLON SET RP block

    LP  shift, and go to state 63


state 6

   12 return_stmt: RETURN . expr_stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    expr_stmt     go to state 68
    expr          go to state 35
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 7

   36 print_stmt: PRINT . LP expr RP SC
   37           | PRINT . LP STRING RP SC

    LP  shift, and go to state 69


state 8

   23 if_stmt: IF . LP expr RP stmt
   24        | IF . LP expr RP stmt ELSE stmt

    LP  shift, and go to state 70


state 9

    6 func_decl: FUNCTION . IDENTIFIER LP argument_list RP block
    7          | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 71


state 10

   51 number_assn: IDENTIFIER . ASSN_OP number_expr
   62 number_basic: IDENTIFIER .
   68 set_assn: IDENTIFIER . ASSN_OP set_expr

    ASSN_OP  shift, and go to state 72

    $default  reduce using rule 62 (number_basic)


state 11

   61 number_basic: NUMBER .

    $default  reduce using rule 61 (number_basic)


state 12

   82 SET: SET_INIT .

    $default  reduce using rule 82 (SET)


state 13

   65 number_basic: INPUT . LP RP
   66             | INPUT . LP STRING RP

    LP  shift, and go to state 73


state 14

   86 set_size: CARDINALITY_OP . SET_IDE
   87         | CARDINALITY_OP . SET

    SET_IDE   shift, and go to state 74
    SET_INIT  shift, and go to state 12
    LB        shift, and go to state 67

    SET  go to state 75


state 15

  100 set_unary_op: POWERSET_OP .

    $default  reduce using rule 100 (set_unary_op)


state 16

   63 number_basic: LP . number_expr RP
   80 set_basic: LP . set_expr RP

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    number_expr   go to state 76
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 77
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 17

   10 block: LB . list RB
   83 SET: LB . argument_list RB

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 78
    STR_IDE         shift, and go to state 79
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    FUNCTION        shift, and go to state 9
    IDENTIFIER      shift, and go to state 80
    NUMBER          shift, and go to state 81
    STRING          shift, and go to state 82
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    list           go to state 83
    list_basic     go to state 20
    func_decl      go to state 21
    argument_list  go to state 84
    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 25
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 85
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53
    primary        go to state 86


state 18

    0 $accept: program . $end

    $end  shift, and go to state 87


state 19

    1 program: list .
    3 list: list . list_basic

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    FUNCTION        shift, and go to state 9
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    $default  reduce using rule 1 (program)

    list_basic     go to state 88
    func_decl      go to state 21
    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 25
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 20

    2 list: list_basic .

    $default  reduce using rule 2 (list)


state 21

    4 list_basic: func_decl .

    $default  reduce using rule 4 (list_basic)


state 22

   16 stmt: block .

    $default  reduce using rule 16 (stmt)


state 23

   20 stmt: delete_stmt .

    $default  reduce using rule 20 (stmt)


state 24

   15 stmt: return_stmt .

    $default  reduce using rule 15 (stmt)


state 25

    5 list_basic: stmt .

    $default  reduce using rule 5 (list_basic)


state 26

   22 stmt: if_stmt .

    $default  reduce using rule 22 (stmt)


state 27

   14 stmt: loop_stmt .

    $default  reduce using rule 14 (stmt)


state 28

   26 loop_stmt: while_stmt .

    $default  reduce using rule 26 (loop_stmt)


state 29

   25 loop_stmt: for_stmt .

    $default  reduce using rule 25 (loop_stmt)


state 30

   32 for_stmt: iterative_for .

    $default  reduce using rule 32 (for_stmt)


state 31

   19 stmt: print_stmt .

    $default  reduce using rule 19 (stmt)


state 32

   81 set_basic: contain_expr .

    $default  reduce using rule 81 (set_basic)


state 33

   21 stmt: assn_stmt .

    $default  reduce using rule 21 (stmt)


state 34

   13 stmt: expr_stmt .

    $default  reduce using rule 13 (stmt)


state 35

   42 expr_stmt: expr . SC

    SC  shift, and go to state 89


state 36

   39 assn_stmt: string_assn . SC

    SC  shift, and go to state 90


state 37

   41 assn_stmt: number_assn . SC

    SC  shift, and go to state 91


state 38

   43 expr: number_expr .
   52 number_expr: number_expr . general_comp_op number_addt

    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    $default  reduce using rule 43 (expr)

    general_comp_op  go to state 100


state 39

   53 number_expr: number_addt .
   54 number_addt: number_addt . basic_addition_op number_mult

    PLUS_OP   shift, and go to state 101
    MINUS_OP  shift, and go to state 102

    $default  reduce using rule 53 (number_expr)

    basic_addition_op  go to state 103


state 40

   55 number_addt: number_mult .
   56 number_mult: number_mult . basic_multiplication_op number_call

    MULTIPLY_OP  shift, and go to state 104
    DIVIDE_OP    shift, and go to state 105
    MOD_OP       shift, and go to state 106

    $default  reduce using rule 55 (number_addt)

    basic_multiplication_op  go to state 107


state 41

   57 number_mult: number_call .

    $default  reduce using rule 57 (number_mult)


state 42

   60 number_call: number_basic .

    $default  reduce using rule 60 (number_call)


state 43

   40 assn_stmt: set_assn . SC

    SC  shift, and go to state 108


state 44

   44 expr: set_expr .
   69 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    $default  reduce using rule 44 (expr)

    general_comp_op  go to state 109


state 45

   70 set_expr: set_arith .
   71 set_arith: set_arith . set_arith_op set_unary

    DIFF_OP          shift, and go to state 110
    UNION_OP         shift, and go to state 111
    CARTESIAN_OP     shift, and go to state 112
    INTERSECTION_OP  shift, and go to state 113

    $default  reduce using rule 70 (set_expr)

    set_arith_op  go to state 114


state 46

   72 set_arith: set_unary .

    $default  reduce using rule 72 (set_arith)


state 47

   74 set_unary: set_call .

    $default  reduce using rule 74 (set_unary)


state 48

   77 set_call: set_basic .

    $default  reduce using rule 77 (set_call)


state 49

   78 set_basic: SET .

    $default  reduce using rule 78 (set_basic)


state 50

   17 stmt: set_pull .

    $default  reduce using rule 17 (stmt)


state 51

   18 stmt: set_push .

    $default  reduce using rule 18 (stmt)


state 52

   64 number_basic: set_size .

    $default  reduce using rule 64 (number_basic)


state 53

   73 set_unary: set_unary_op . set_basic

    SET_IDE   shift, and go to state 65
    SET_INIT  shift, and go to state 12
    LP        shift, and go to state 115
    LB        shift, and go to state 67

    contain_expr  go to state 32
    set_basic     go to state 116
    SET           go to state 49


state 54

   27 while_stmt: WHILE LP . expr RP block
   28           | WHILE LP . expr RP expr_stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    expr          go to state 117
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 55

   75 set_call: FUNC SET_IDE . LP argument_list RP
   76         | FUNC SET_IDE . LP RP

    LP  shift, and go to state 118


state 56

   49 string_assn: FUNC STR_IDE . LP argument_list RP
   50            | FUNC STR_IDE . LP RP

    LP  shift, and go to state 119


state 57

   58 number_call: FUNC IDENTIFIER . LP argument_list RP
   59            | FUNC IDENTIFIER . LP RP

    LP  shift, and go to state 120


state 58

   67 set_assn: SET_IDE ASSN_OP . set_expr

    FUNC         shift, and go to state 121
    SET_IDE      shift, and go to state 65
    SET_INIT     shift, and go to state 12
    POWERSET_OP  shift, and go to state 15
    LP           shift, and go to state 115
    LB           shift, and go to state 67

    contain_expr  go to state 32
    set_expr      go to state 122
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_unary_op  go to state 53


state 59

   84 set_pull: SET_IDE PULL_OP . primary SC

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    LB          shift, and go to state 67

    SET      go to state 127
    primary  go to state 128


state 60

   85 set_push: SET_IDE PUSH_OP . primary SC

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    LB          shift, and go to state 67

    SET      go to state 127
    primary  go to state 129


state 61

   11 delete_stmt: SET_IDE ARROW . SET_DELETE LP RP SC
   38 contain_expr: SET_IDE ARROW . SET_CONTAINS LP argument_list RP

    SET_CONTAINS  shift, and go to state 130
    SET_DELETE    shift, and go to state 131


state 62

   45 string_assn: STR_IDE ASSN_OP . STRING
   46            | STR_IDE ASSN_OP . INPUT LP RP
   47            | STR_IDE ASSN_OP . INPUT LP STRING RP
   48            | STR_IDE ASSN_OP . STR_IDE

    STR_IDE  shift, and go to state 132
    STRING   shift, and go to state 133
    INPUT    shift, and go to state 134


state 63

   29 for_stmt: FOR LP . assn_stmt expr_stmt expr RP stmt
   30         | FOR LP . assn_stmt SC expr RP stmt
   31         | FOR LP . assn_stmt expr_stmt assn_stmt RP stmt
   33 iterative_for: FOR LP . IDENTIFIER COLON SET RP expr_stmt
   34              | FOR LP . IDENTIFIER COLON SET_IDE RP block
   35              | FOR LP . IDENTIFIER COLON SET RP block

    FUNC        shift, and go to state 135
    SET_IDE     shift, and go to state 136
    STR_IDE     shift, and go to state 4
    IDENTIFIER  shift, and go to state 137

    assn_stmt    go to state 138
    string_assn  go to state 36
    number_assn  go to state 37
    set_assn     go to state 43


state 64

   58 number_call: FUNC . IDENTIFIER LP argument_list RP
   59            | FUNC . IDENTIFIER LP RP
   75 set_call: FUNC . SET_IDE LP argument_list RP
   76         | FUNC . SET_IDE LP RP

    SET_IDE     shift, and go to state 55
    IDENTIFIER  shift, and go to state 57


state 65

   38 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   79 set_basic: SET_IDE .

    ARROW  shift, and go to state 139

    $default  reduce using rule 79 (set_basic)


state 66

   62 number_basic: IDENTIFIER .

    $default  reduce using rule 62 (number_basic)


state 67

   83 SET: LB . argument_list RB

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    LB          shift, and go to state 67

    argument_list  go to state 84
    SET            go to state 127
    primary        go to state 86


state 68

   12 return_stmt: RETURN expr_stmt .

    $default  reduce using rule 12 (return_stmt)


state 69

   36 print_stmt: PRINT LP . expr RP SC
   37           | PRINT LP . STRING RP SC

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    STRING          shift, and go to state 140
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    expr          go to state 141
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 70

   23 if_stmt: IF LP . expr RP stmt
   24        | IF LP . expr RP stmt ELSE stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    expr          go to state 142
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 71

    6 func_decl: FUNCTION IDENTIFIER . LP argument_list RP block
    7          | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 143


state 72

   51 number_assn: IDENTIFIER ASSN_OP . number_expr
   68 set_assn: IDENTIFIER ASSN_OP . set_expr

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    number_expr   go to state 144
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 145
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 73

   65 number_basic: INPUT LP . RP
   66             | INPUT LP . STRING RP

    STRING  shift, and go to state 146
    RP      shift, and go to state 147


state 74

   86 set_size: CARDINALITY_OP SET_IDE .

    $default  reduce using rule 86 (set_size)


state 75

   87 set_size: CARDINALITY_OP SET .

    $default  reduce using rule 87 (set_size)


state 76

   52 number_expr: number_expr . general_comp_op number_addt
   63 number_basic: LP number_expr . RP

    RP   shift, and go to state 148
    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    general_comp_op  go to state 100


state 77

   69 set_expr: set_expr . general_comp_op set_arith
   80 set_basic: LP set_expr . RP

    RP   shift, and go to state 149
    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    general_comp_op  go to state 109


state 78

   11 delete_stmt: SET_IDE . ARROW SET_DELETE LP RP SC
   38 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   67 set_assn: SET_IDE . ASSN_OP set_expr
   79 set_basic: SET_IDE .
   84 set_pull: SET_IDE . PULL_OP primary SC
   85 set_push: SET_IDE . PUSH_OP primary SC
  109 primary: SET_IDE .

    ASSN_OP  shift, and go to state 58
    PULL_OP  shift, and go to state 59
    PUSH_OP  shift, and go to state 60
    ARROW    shift, and go to state 61

    RB        reduce using rule 109 (primary)
    COMMA     reduce using rule 109 (primary)
    $default  reduce using rule 79 (set_basic)


state 79

   45 string_assn: STR_IDE . ASSN_OP STRING
   46            | STR_IDE . ASSN_OP INPUT LP RP
   47            | STR_IDE . ASSN_OP INPUT LP STRING RP
   48            | STR_IDE . ASSN_OP STR_IDE
  110 primary: STR_IDE .

    ASSN_OP  shift, and go to state 62

    $default  reduce using rule 110 (primary)


state 80

   51 number_assn: IDENTIFIER . ASSN_OP number_expr
   62 number_basic: IDENTIFIER .
   68 set_assn: IDENTIFIER . ASSN_OP set_expr
  108 primary: IDENTIFIER .

    ASSN_OP  shift, and go to state 72

    RB        reduce using rule 108 (primary)
    COMMA     reduce using rule 108 (primary)
    $default  reduce using rule 62 (number_basic)


state 81

   61 number_basic: NUMBER .
  106 primary: NUMBER .

    RB        reduce using rule 106 (primary)
    COMMA     reduce using rule 106 (primary)
    $default  reduce using rule 61 (number_basic)


state 82

  107 primary: STRING .

    $default  reduce using rule 107 (primary)


state 83

    3 list: list . list_basic
   10 block: LB list . RB

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    FUNCTION        shift, and go to state 9
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17
    RB              shift, and go to state 150

    list_basic     go to state 88
    func_decl      go to state 21
    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 25
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 84

    9 argument_list: argument_list . COMMA primary
   83 SET: LB argument_list . RB

    RB     shift, and go to state 151
    COMMA  shift, and go to state 152


state 85

   78 set_basic: SET .
  111 primary: SET .

    RB        reduce using rule 111 (primary)
    COMMA     reduce using rule 111 (primary)
    $default  reduce using rule 78 (set_basic)


state 86

    8 argument_list: primary .

    $default  reduce using rule 8 (argument_list)


state 87

    0 $accept: program $end .

    $default  accept


state 88

    3 list: list list_basic .

    $default  reduce using rule 3 (list)


state 89

   42 expr_stmt: expr SC .

    $default  reduce using rule 42 (expr_stmt)


state 90

   39 assn_stmt: string_assn SC .

    $default  reduce using rule 39 (assn_stmt)


state 91

   41 assn_stmt: number_assn SC .

    $default  reduce using rule 41 (assn_stmt)


state 92

   95 general_comp_op: AND .

    $default  reduce using rule 95 (general_comp_op)


state 93

   94 general_comp_op: OR .

    $default  reduce using rule 94 (general_comp_op)


state 94

   88 general_comp_op: LT .

    $default  reduce using rule 88 (general_comp_op)


state 95

   89 general_comp_op: LEQ .

    $default  reduce using rule 89 (general_comp_op)


state 96

   90 general_comp_op: GT .

    $default  reduce using rule 90 (general_comp_op)


state 97

   91 general_comp_op: GEQ .

    $default  reduce using rule 91 (general_comp_op)


state 98

   92 general_comp_op: EE .

    $default  reduce using rule 92 (general_comp_op)


state 99

   93 general_comp_op: NE .

    $default  reduce using rule 93 (general_comp_op)


state 100

   52 number_expr: number_expr general_comp_op . number_addt

    FUNC            shift, and go to state 153
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    LP              shift, and go to state 154

    number_addt   go to state 155
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_size      go to state 52


state 101

  101 basic_addition_op: PLUS_OP .

    $default  reduce using rule 101 (basic_addition_op)


state 102

  102 basic_addition_op: MINUS_OP .

    $default  reduce using rule 102 (basic_addition_op)


state 103

   54 number_addt: number_addt basic_addition_op . number_mult

    FUNC            shift, and go to state 153
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    LP              shift, and go to state 154

    number_mult   go to state 156
    number_call   go to state 41
    number_basic  go to state 42
    set_size      go to state 52


state 104

  103 basic_multiplication_op: MULTIPLY_OP .

    $default  reduce using rule 103 (basic_multiplication_op)


state 105

  104 basic_multiplication_op: DIVIDE_OP .

    $default  reduce using rule 104 (basic_multiplication_op)


state 106

  105 basic_multiplication_op: MOD_OP .

    $default  reduce using rule 105 (basic_multiplication_op)


state 107

   56 number_mult: number_mult basic_multiplication_op . number_call

    FUNC            shift, and go to state 153
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    LP              shift, and go to state 154

    number_call   go to state 157
    number_basic  go to state 42
    set_size      go to state 52


state 108

   40 assn_stmt: set_assn SC .

    $default  reduce using rule 40 (assn_stmt)


state 109

   69 set_expr: set_expr general_comp_op . set_arith

    FUNC         shift, and go to state 121
    SET_IDE      shift, and go to state 65
    SET_INIT     shift, and go to state 12
    POWERSET_OP  shift, and go to state 15
    LP           shift, and go to state 115
    LB           shift, and go to state 67

    contain_expr  go to state 32
    set_arith     go to state 158
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_unary_op  go to state 53


state 110

   98 set_arith_op: DIFF_OP .

    $default  reduce using rule 98 (set_arith_op)


state 111

   96 set_arith_op: UNION_OP .

    $default  reduce using rule 96 (set_arith_op)


state 112

   99 set_arith_op: CARTESIAN_OP .

    $default  reduce using rule 99 (set_arith_op)


state 113

   97 set_arith_op: INTERSECTION_OP .

    $default  reduce using rule 97 (set_arith_op)


state 114

   71 set_arith: set_arith set_arith_op . set_unary

    FUNC         shift, and go to state 121
    SET_IDE      shift, and go to state 65
    SET_INIT     shift, and go to state 12
    POWERSET_OP  shift, and go to state 15
    LP           shift, and go to state 115
    LB           shift, and go to state 67

    contain_expr  go to state 32
    set_unary     go to state 159
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_unary_op  go to state 53


state 115

   80 set_basic: LP . set_expr RP

    FUNC         shift, and go to state 121
    SET_IDE      shift, and go to state 65
    SET_INIT     shift, and go to state 12
    POWERSET_OP  shift, and go to state 15
    LP           shift, and go to state 115
    LB           shift, and go to state 67

    contain_expr  go to state 32
    set_expr      go to state 77
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_unary_op  go to state 53


state 116

   73 set_unary: set_unary_op set_basic .

    $default  reduce using rule 73 (set_unary)


state 117

   27 while_stmt: WHILE LP expr . RP block
   28           | WHILE LP expr . RP expr_stmt

    RP  shift, and go to state 160


state 118

   75 set_call: FUNC SET_IDE LP . argument_list RP
   76         | FUNC SET_IDE LP . RP

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    RP          shift, and go to state 161
    LB          shift, and go to state 67

    argument_list  go to state 162
    SET            go to state 127
    primary        go to state 86


state 119

   49 string_assn: FUNC STR_IDE LP . argument_list RP
   50            | FUNC STR_IDE LP . RP

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    RP          shift, and go to state 163
    LB          shift, and go to state 67

    argument_list  go to state 164
    SET            go to state 127
    primary        go to state 86


state 120

   58 number_call: FUNC IDENTIFIER LP . argument_list RP
   59            | FUNC IDENTIFIER LP . RP

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    RP          shift, and go to state 165
    LB          shift, and go to state 67

    argument_list  go to state 166
    SET            go to state 127
    primary        go to state 86


state 121

   75 set_call: FUNC . SET_IDE LP argument_list RP
   76         | FUNC . SET_IDE LP RP

    SET_IDE  shift, and go to state 55


state 122

   67 set_assn: SET_IDE ASSN_OP set_expr .
   69 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    $default  reduce using rule 67 (set_assn)

    general_comp_op  go to state 109


state 123

  109 primary: SET_IDE .

    $default  reduce using rule 109 (primary)


state 124

  110 primary: STR_IDE .

    $default  reduce using rule 110 (primary)


state 125

  108 primary: IDENTIFIER .

    $default  reduce using rule 108 (primary)


state 126

  106 primary: NUMBER .

    $default  reduce using rule 106 (primary)


state 127

  111 primary: SET .

    $default  reduce using rule 111 (primary)


state 128

   84 set_pull: SET_IDE PULL_OP primary . SC

    SC  shift, and go to state 167


state 129

   85 set_push: SET_IDE PUSH_OP primary . SC

    SC  shift, and go to state 168


state 130

   38 contain_expr: SET_IDE ARROW SET_CONTAINS . LP argument_list RP

    LP  shift, and go to state 169


state 131

   11 delete_stmt: SET_IDE ARROW SET_DELETE . LP RP SC

    LP  shift, and go to state 170


state 132

   48 string_assn: STR_IDE ASSN_OP STR_IDE .

    $default  reduce using rule 48 (string_assn)


state 133

   45 string_assn: STR_IDE ASSN_OP STRING .

    $default  reduce using rule 45 (string_assn)


state 134

   46 string_assn: STR_IDE ASSN_OP INPUT . LP RP
   47            | STR_IDE ASSN_OP INPUT . LP STRING RP

    LP  shift, and go to state 171


state 135

   49 string_assn: FUNC . STR_IDE LP argument_list RP
   50            | FUNC . STR_IDE LP RP

    STR_IDE  shift, and go to state 56


state 136

   67 set_assn: SET_IDE . ASSN_OP set_expr

    ASSN_OP  shift, and go to state 58


state 137

   33 iterative_for: FOR LP IDENTIFIER . COLON SET RP expr_stmt
   34              | FOR LP IDENTIFIER . COLON SET_IDE RP block
   35              | FOR LP IDENTIFIER . COLON SET RP block
   51 number_assn: IDENTIFIER . ASSN_OP number_expr
   68 set_assn: IDENTIFIER . ASSN_OP set_expr

    ASSN_OP  shift, and go to state 72
    COLON    shift, and go to state 172


state 138

   29 for_stmt: FOR LP assn_stmt . expr_stmt expr RP stmt
   30         | FOR LP assn_stmt . SC expr RP stmt
   31         | FOR LP assn_stmt . expr_stmt assn_stmt RP stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67
    SC              shift, and go to state 173

    contain_expr  go to state 32
    expr_stmt     go to state 174
    expr          go to state 35
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 139

   38 contain_expr: SET_IDE ARROW . SET_CONTAINS LP argument_list RP

    SET_CONTAINS  shift, and go to state 130


state 140

   37 print_stmt: PRINT LP STRING . RP SC

    RP  shift, and go to state 175


state 141

   36 print_stmt: PRINT LP expr . RP SC

    RP  shift, and go to state 176


state 142

   23 if_stmt: IF LP expr . RP stmt
   24        | IF LP expr . RP stmt ELSE stmt

    RP  shift, and go to state 177


state 143

    6 func_decl: FUNCTION IDENTIFIER LP . argument_list RP block
    7          | FUNCTION IDENTIFIER LP . RP block

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    RP          shift, and go to state 178
    LB          shift, and go to state 67

    argument_list  go to state 179
    SET            go to state 127
    primary        go to state 86


state 144

   51 number_assn: IDENTIFIER ASSN_OP number_expr .
   52 number_expr: number_expr . general_comp_op number_addt

    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    $default  reduce using rule 51 (number_assn)

    general_comp_op  go to state 100


state 145

   68 set_assn: IDENTIFIER ASSN_OP set_expr .
   69 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 92
    OR   shift, and go to state 93
    LT   shift, and go to state 94
    LEQ  shift, and go to state 95
    GT   shift, and go to state 96
    GEQ  shift, and go to state 97
    EE   shift, and go to state 98
    NE   shift, and go to state 99

    $default  reduce using rule 68 (set_assn)

    general_comp_op  go to state 109


state 146

   66 number_basic: INPUT LP STRING . RP

    RP  shift, and go to state 180


state 147

   65 number_basic: INPUT LP RP .

    $default  reduce using rule 65 (number_basic)


state 148

   63 number_basic: LP number_expr RP .

    $default  reduce using rule 63 (number_basic)


state 149

   80 set_basic: LP set_expr RP .

    $default  reduce using rule 80 (set_basic)


state 150

   10 block: LB list RB .

    $default  reduce using rule 10 (block)


state 151

   83 SET: LB argument_list RB .

    $default  reduce using rule 83 (SET)


state 152

    9 argument_list: argument_list COMMA . primary

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    LB          shift, and go to state 67

    SET      go to state 127
    primary  go to state 181


state 153

   58 number_call: FUNC . IDENTIFIER LP argument_list RP
   59            | FUNC . IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 57


state 154

   63 number_basic: LP . number_expr RP

    FUNC            shift, and go to state 153
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    LP              shift, and go to state 154

    number_expr   go to state 76
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_size      go to state 52


state 155

   52 number_expr: number_expr general_comp_op number_addt .
   54 number_addt: number_addt . basic_addition_op number_mult

    PLUS_OP   shift, and go to state 101
    MINUS_OP  shift, and go to state 102

    $default  reduce using rule 52 (number_expr)

    basic_addition_op  go to state 103


state 156

   54 number_addt: number_addt basic_addition_op number_mult .
   56 number_mult: number_mult . basic_multiplication_op number_call

    MULTIPLY_OP  shift, and go to state 104
    DIVIDE_OP    shift, and go to state 105
    MOD_OP       shift, and go to state 106

    $default  reduce using rule 54 (number_addt)

    basic_multiplication_op  go to state 107


state 157

   56 number_mult: number_mult basic_multiplication_op number_call .

    $default  reduce using rule 56 (number_mult)


state 158

   69 set_expr: set_expr general_comp_op set_arith .
   71 set_arith: set_arith . set_arith_op set_unary

    DIFF_OP          shift, and go to state 110
    UNION_OP         shift, and go to state 111
    CARTESIAN_OP     shift, and go to state 112
    INTERSECTION_OP  shift, and go to state 113

    $default  reduce using rule 69 (set_expr)

    set_arith_op  go to state 114


state 159

   71 set_arith: set_arith set_arith_op set_unary .

    $default  reduce using rule 71 (set_arith)


state 160

   27 while_stmt: WHILE LP expr RP . block
   28           | WHILE LP expr RP . expr_stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block         go to state 182
    contain_expr  go to state 32
    expr_stmt     go to state 183
    expr          go to state 35
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 161

   76 set_call: FUNC SET_IDE LP RP .

    $default  reduce using rule 76 (set_call)


state 162

    9 argument_list: argument_list . COMMA primary
   75 set_call: FUNC SET_IDE LP argument_list . RP

    RP     shift, and go to state 184
    COMMA  shift, and go to state 152


state 163

   50 string_assn: FUNC STR_IDE LP RP .

    $default  reduce using rule 50 (string_assn)


state 164

    9 argument_list: argument_list . COMMA primary
   49 string_assn: FUNC STR_IDE LP argument_list . RP

    RP     shift, and go to state 185
    COMMA  shift, and go to state 152


state 165

   59 number_call: FUNC IDENTIFIER LP RP .

    $default  reduce using rule 59 (number_call)


state 166

    9 argument_list: argument_list . COMMA primary
   58 number_call: FUNC IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 186
    COMMA  shift, and go to state 152


state 167

   84 set_pull: SET_IDE PULL_OP primary SC .

    $default  reduce using rule 84 (set_pull)


state 168

   85 set_push: SET_IDE PUSH_OP primary SC .

    $default  reduce using rule 85 (set_push)


state 169

   38 contain_expr: SET_IDE ARROW SET_CONTAINS LP . argument_list RP

    SET_IDE     shift, and go to state 123
    STR_IDE     shift, and go to state 124
    IDENTIFIER  shift, and go to state 125
    NUMBER      shift, and go to state 126
    STRING      shift, and go to state 82
    SET_INIT    shift, and go to state 12
    LB          shift, and go to state 67

    argument_list  go to state 187
    SET            go to state 127
    primary        go to state 86


state 170

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP . RP SC

    RP  shift, and go to state 188


state 171

   46 string_assn: STR_IDE ASSN_OP INPUT LP . RP
   47            | STR_IDE ASSN_OP INPUT LP . STRING RP

    STRING  shift, and go to state 189
    RP      shift, and go to state 190


state 172

   33 iterative_for: FOR LP IDENTIFIER COLON . SET RP expr_stmt
   34              | FOR LP IDENTIFIER COLON . SET_IDE RP block
   35              | FOR LP IDENTIFIER COLON . SET RP block

    SET_IDE   shift, and go to state 191
    SET_INIT  shift, and go to state 12
    LB        shift, and go to state 67

    SET  go to state 192


state 173

   30 for_stmt: FOR LP assn_stmt SC . expr RP stmt

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    expr          go to state 193
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 174

   29 for_stmt: FOR LP assn_stmt expr_stmt . expr RP stmt
   31         | FOR LP assn_stmt expr_stmt . assn_stmt RP stmt

    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 194
    STR_IDE         shift, and go to state 4
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 67

    contain_expr  go to state 32
    assn_stmt     go to state 195
    expr          go to state 196
    string_assn   go to state 36
    number_assn   go to state 37
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_assn      go to state 43
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 175

   37 print_stmt: PRINT LP STRING RP . SC

    SC  shift, and go to state 197


state 176

   36 print_stmt: PRINT LP expr RP . SC

    SC  shift, and go to state 198


state 177

   23 if_stmt: IF LP expr RP . stmt
   24        | IF LP expr RP . stmt ELSE stmt

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 199
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 178

    7 func_decl: FUNCTION IDENTIFIER LP RP . block

    LB  shift, and go to state 200

    block  go to state 201


state 179

    6 func_decl: FUNCTION IDENTIFIER LP argument_list . RP block
    9 argument_list: argument_list . COMMA primary

    RP     shift, and go to state 202
    COMMA  shift, and go to state 152


state 180

   66 number_basic: INPUT LP STRING RP .

    $default  reduce using rule 66 (number_basic)


state 181

    9 argument_list: argument_list COMMA primary .

    $default  reduce using rule 9 (argument_list)


state 182

   27 while_stmt: WHILE LP expr RP block .

    $default  reduce using rule 27 (while_stmt)


state 183

   28 while_stmt: WHILE LP expr RP expr_stmt .

    $default  reduce using rule 28 (while_stmt)


state 184

   75 set_call: FUNC SET_IDE LP argument_list RP .

    $default  reduce using rule 75 (set_call)


state 185

   49 string_assn: FUNC STR_IDE LP argument_list RP .

    $default  reduce using rule 49 (string_assn)


state 186

   58 number_call: FUNC IDENTIFIER LP argument_list RP .

    $default  reduce using rule 58 (number_call)


state 187

    9 argument_list: argument_list . COMMA primary
   38 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list . RP

    RP     shift, and go to state 203
    COMMA  shift, and go to state 152


state 188

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP . SC

    SC  shift, and go to state 204


state 189

   47 string_assn: STR_IDE ASSN_OP INPUT LP STRING . RP

    RP  shift, and go to state 205


state 190

   46 string_assn: STR_IDE ASSN_OP INPUT LP RP .

    $default  reduce using rule 46 (string_assn)


state 191

   34 iterative_for: FOR LP IDENTIFIER COLON SET_IDE . RP block

    RP  shift, and go to state 206


state 192

   33 iterative_for: FOR LP IDENTIFIER COLON SET . RP expr_stmt
   35              | FOR LP IDENTIFIER COLON SET . RP block

    RP  shift, and go to state 207


state 193

   30 for_stmt: FOR LP assn_stmt SC expr . RP stmt

    RP  shift, and go to state 208


state 194

   38 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   67 set_assn: SET_IDE . ASSN_OP set_expr
   79 set_basic: SET_IDE .

    ASSN_OP  shift, and go to state 58
    ARROW    shift, and go to state 139

    $default  reduce using rule 79 (set_basic)


state 195

   31 for_stmt: FOR LP assn_stmt expr_stmt assn_stmt . RP stmt

    RP  shift, and go to state 209


state 196

   29 for_stmt: FOR LP assn_stmt expr_stmt expr . RP stmt

    RP  shift, and go to state 210


state 197

   37 print_stmt: PRINT LP STRING RP SC .

    $default  reduce using rule 37 (print_stmt)


state 198

   36 print_stmt: PRINT LP expr RP SC .

    $default  reduce using rule 36 (print_stmt)


state 199

   23 if_stmt: IF LP expr RP stmt .
   24        | IF LP expr RP stmt . ELSE stmt

    ELSE  shift, and go to state 211

    $default  reduce using rule 23 (if_stmt)


state 200

   10 block: LB . list RB

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    FUNCTION        shift, and go to state 9
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    list           go to state 83
    list_basic     go to state 20
    func_decl      go to state 21
    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 25
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 201

    7 func_decl: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 7 (func_decl)


state 202

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP . block

    LB  shift, and go to state 200

    block  go to state 212


state 203

   38 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list RP .

    $default  reduce using rule 38 (contain_expr)


state 204

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP SC .

    $default  reduce using rule 11 (delete_stmt)


state 205

   47 string_assn: STR_IDE ASSN_OP INPUT LP STRING RP .

    $default  reduce using rule 47 (string_assn)


state 206

   34 iterative_for: FOR LP IDENTIFIER COLON SET_IDE RP . block

    LB  shift, and go to state 200

    block  go to state 213


state 207

   33 iterative_for: FOR LP IDENTIFIER COLON SET RP . expr_stmt
   35              | FOR LP IDENTIFIER COLON SET RP . block

    FUNC            shift, and go to state 64
    SET_IDE         shift, and go to state 65
    IDENTIFIER      shift, and go to state 66
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block         go to state 214
    contain_expr  go to state 32
    expr_stmt     go to state 215
    expr          go to state 35
    number_expr   go to state 38
    number_addt   go to state 39
    number_mult   go to state 40
    number_call   go to state 41
    number_basic  go to state 42
    set_expr      go to state 44
    set_arith     go to state 45
    set_unary     go to state 46
    set_call      go to state 47
    set_basic     go to state 48
    SET           go to state 49
    set_size      go to state 52
    set_unary_op  go to state 53


state 208

   30 for_stmt: FOR LP assn_stmt SC expr RP . stmt

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 216
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 209

   31 for_stmt: FOR LP assn_stmt expr_stmt assn_stmt RP . stmt

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 217
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 210

   29 for_stmt: FOR LP assn_stmt expr_stmt expr RP . stmt

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 218
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 211

   24 if_stmt: IF LP expr RP stmt ELSE . stmt

    WHILE           shift, and go to state 1
    FUNC            shift, and go to state 2
    SET_IDE         shift, and go to state 3
    STR_IDE         shift, and go to state 4
    FOR             shift, and go to state 5
    RETURN          shift, and go to state 6
    PRINT           shift, and go to state 7
    IF              shift, and go to state 8
    IDENTIFIER      shift, and go to state 10
    NUMBER          shift, and go to state 11
    SET_INIT        shift, and go to state 12
    INPUT           shift, and go to state 13
    CARDINALITY_OP  shift, and go to state 14
    POWERSET_OP     shift, and go to state 15
    LP              shift, and go to state 16
    LB              shift, and go to state 17

    block          go to state 22
    delete_stmt    go to state 23
    return_stmt    go to state 24
    stmt           go to state 219
    if_stmt        go to state 26
    loop_stmt      go to state 27
    while_stmt     go to state 28
    for_stmt       go to state 29
    iterative_for  go to state 30
    print_stmt     go to state 31
    contain_expr   go to state 32
    assn_stmt      go to state 33
    expr_stmt      go to state 34
    expr           go to state 35
    string_assn    go to state 36
    number_assn    go to state 37
    number_expr    go to state 38
    number_addt    go to state 39
    number_mult    go to state 40
    number_call    go to state 41
    number_basic   go to state 42
    set_assn       go to state 43
    set_expr       go to state 44
    set_arith      go to state 45
    set_unary      go to state 46
    set_call       go to state 47
    set_basic      go to state 48
    SET            go to state 49
    set_pull       go to state 50
    set_push       go to state 51
    set_size       go to state 52
    set_unary_op   go to state 53


state 212

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP block .

    $default  reduce using rule 6 (func_decl)


state 213

   34 iterative_for: FOR LP IDENTIFIER COLON SET_IDE RP block .

    $default  reduce using rule 34 (iterative_for)


state 214

   35 iterative_for: FOR LP IDENTIFIER COLON SET RP block .

    $default  reduce using rule 35 (iterative_for)


state 215

   33 iterative_for: FOR LP IDENTIFIER COLON SET RP expr_stmt .

    $default  reduce using rule 33 (iterative_for)


state 216

   30 for_stmt: FOR LP assn_stmt SC expr RP stmt .

    $default  reduce using rule 30 (for_stmt)


state 217

   31 for_stmt: FOR LP assn_stmt expr_stmt assn_stmt RP stmt .

    $default  reduce using rule 31 (for_stmt)


state 218

   29 for_stmt: FOR LP assn_stmt expr_stmt expr RP stmt .

    $default  reduce using rule 29 (for_stmt)


state 219

   24 if_stmt: IF LP expr RP stmt ELSE stmt .

    $default  reduce using rule 24 (if_stmt)
