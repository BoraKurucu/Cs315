State 48 conflicts: 18 reduce/reduce
State 61 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: list

    2 list: list_basic
    3     | list list_basic

    4 list_basic: func_decl
    5           | stmt

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP block
    7          | FUNCTION IDENTIFIER LP RP block

    8 argument_list: primary
    9              | argument_list COMMA primary

   10 block: LB list RB

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP SC

   12 return_stmt: RETURN expr_stmt

   13 stmt: expr_stmt
   14     | loop_stmt
   15     | return_stmt
   16     | block
   17     | set_pull
   18     | set_push
   19     | print_stmt
   20     | delete_stmt
   21     | assn_stmt
   22     | if_stmt

   23 if_stmt: IF LP expr RP stmt
   24        | IF LP expr RP stmt ELSE stmt

   25 loop_stmt: for_stmt
   26          | while_stmt

   27 while_stmt: WHILE LP expr RP block
   28           | WHILE LP expr RP expr_stmt

   29 for_stmt: FOR LP assn_stmt expr expr RP block
   30         | FOR LP assn_stmt expr expr RP expr_stmt
   31         | iterative_for

   32 iterative_for: FOR LP IDENTIFIER COLON SET RP expr_stmt
   33              | FOR LP IDENTIFIER COLON SET_IDE RP block
   34              | FOR LP IDENTIFIER COLON SET RP block

   35 print_stmt: PRINT LP expr RP SC
   36           | PRINT LP STRING RP SC

   37 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list RP

   38 assn_stmt: string_assn SC
   39          | set_assn SC
   40          | number_assn SC

   41 expr_stmt: expr SC

   42 expr: number_expr
   43     | set_expr

   44 string_assn: STR_IDE ASSN_OP STRING
   45            | STR_IDE ASSN_OP INPUT LP RP
   46            | STR_IDE ASSN_OP INPUT LP STRING RP

   47 number_assn: IDENTIFIER ASSN_OP number_expr

   48 number_expr: number_expr general_comp_op number_addt
   49            | number_addt

   50 number_addt: number_addt basic_addition_op number_mult
   51            | number_mult

   52 number_mult: number_mult basic_multiplication_op number_call
   53            | number_call

   54 number_call: call_expr
   55            | number_factor

   56 number_factor: NUMBER
   57              | IDENTIFIER
   58              | LP number_expr RP
   59              | set_size
   60              | INPUT LP RP
   61              | INPUT LP STRING RP

   62 set_assn: IDENTIFIER ASSN_OP set_expr
   63         | SET_IDE ASSN_OP set_expr

   64 set_expr: set_expr general_comp_op set_arith
   65         | set_arith

   66 set_arith: set_arith set_arith_op set_unary
   67          | set_unary

   68 set_unary: set_unary_op set_call
   69          | set_call

   70 set_call: call_expr
   71         | SET_IDE ARROW LP argument_list RP
   72         | contain_expr
   73         | set_basic

   74 set_basic: SET
   75          | SET_IDE
   76          | LP set_expr RP

   77 call_expr: IDENTIFIER LP argument_list RP
   78          | IDENTIFIER LP RP

   79 set_pull: SET_IDE PULL_OP primary SC

   80 set_push: SET_IDE PUSH_OP primary SC

   81 set_size: CARDINALITY_OP SET_IDE
   82         | CARDINALITY_OP SET

   83 general_comp_op: LT
   84                | LEQ
   85                | GT
   86                | GEQ
   87                | EE
   88                | NE
   89                | OR
   90                | AND

   91 set_arith_op: UNION_OP
   92             | INTERSECTION_OP
   93             | DIFF_OP
   94             | CARTESIAN_OP

   95 set_unary_op: POWERSET_OP

   96 basic_addition_op: PLUS_OP
   97                  | MINUS_OP

   98 basic_multiplication_op: MULTIPLY_OP
   99                        | DIVIDE_OP
  100                        | MOD_OP

  101 primary: NUMBER
  102        | STRING
  103        | SET
  104        | IDENTIFIER
  105        | SET_IDE
  106        | STR_IDE


Terminals, with rules where they appear

$end (0) 0
error (256)
WHILE (258) 27 28
SET_IDE (259) 11 33 37 63 71 75 79 80 81 105
STR_IDE (260) 44 45 46 106
FOR (261) 29 30 32 33 34
RETURN (262) 12
PRINT (263) 35 36
IF (264) 23 24
ELSE (265) 24
FUNCTION (266) 6 7
IDENTIFIER (267) 6 7 32 33 34 47 57 62 77 78 104
NUMBER (268) 56 101
STRING (269) 36 44 46 61 102
SET (270) 32 34 74 82 103
INPUT (271) 45 46 60 61
ASSN_OP (272) 44 45 46 47 62 63
DIFF_OP (273) 93
UNION_OP (274) 91
CARTESIAN_OP (275) 94
INTERSECTION_OP (276) 92
PULL_OP (277) 79
PUSH_OP (278) 80
CARDINALITY_OP (279) 81 82
POWERSET_OP (280) 95
SET_CONTAINS (281) 37
SET_DELETE (282) 11
LP (283) 6 7 11 23 24 27 28 29 30 32 33 34 35 36 37 45 46 58 60 61
    71 76 77 78
RP (284) 6 7 11 23 24 27 28 29 30 32 33 34 35 36 37 45 46 58 60 61
    71 76 77 78
LB (285) 10
RB (286) 10
COMMA (287) 9
COLON (288) 32 33 34
SC (289) 11 35 36 38 39 40 41 79 80
PLUS_OP (290) 96
MULTIPLY_OP (291) 98
DIVIDE_OP (292) 99
MOD_OP (293) 100
MINUS_OP (294) 97
AND (295) 90
OR (296) 89
LT (297) 83
LEQ (298) 84
GT (299) 85
GEQ (300) 86
EE (301) 87
NE (302) 88
ARROW (303) 11 37 71
LOWER_THAN_ELSE (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
list (52)
    on left: 2 3, on right: 1 3 10
list_basic (53)
    on left: 4 5, on right: 2 3
func_decl (54)
    on left: 6 7, on right: 4
argument_list (55)
    on left: 8 9, on right: 6 9 37 71 77
block (56)
    on left: 10, on right: 6 7 16 27 29 33 34
delete_stmt (57)
    on left: 11, on right: 20
return_stmt (58)
    on left: 12, on right: 15
stmt (59)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 5 23 24
if_stmt (60)
    on left: 23 24, on right: 22
loop_stmt (61)
    on left: 25 26, on right: 14
while_stmt (62)
    on left: 27 28, on right: 26
for_stmt (63)
    on left: 29 30 31, on right: 25
iterative_for (64)
    on left: 32 33 34, on right: 31
print_stmt (65)
    on left: 35 36, on right: 19
contain_expr (66)
    on left: 37, on right: 72
assn_stmt (67)
    on left: 38 39 40, on right: 21 29 30
expr_stmt (68)
    on left: 41, on right: 12 13 28 30 32
expr (69)
    on left: 42 43, on right: 23 24 27 28 29 30 35 41
string_assn (70)
    on left: 44 45 46, on right: 38
number_assn (71)
    on left: 47, on right: 40
number_expr (72)
    on left: 48 49, on right: 42 47 48 58
number_addt (73)
    on left: 50 51, on right: 48 49 50
number_mult (74)
    on left: 52 53, on right: 50 51 52
number_call (75)
    on left: 54 55, on right: 52 53
number_factor (76)
    on left: 56 57 58 59 60 61, on right: 55
set_assn (77)
    on left: 62 63, on right: 39
set_expr (78)
    on left: 64 65, on right: 43 62 63 64 76
set_arith (79)
    on left: 66 67, on right: 64 65 66
set_unary (80)
    on left: 68 69, on right: 66 67
set_call (81)
    on left: 70 71 72 73, on right: 68 69
set_basic (82)
    on left: 74 75 76, on right: 73
call_expr (83)
    on left: 77 78, on right: 54 70
set_pull (84)
    on left: 79, on right: 17
set_push (85)
    on left: 80, on right: 18
set_size (86)
    on left: 81 82, on right: 59
general_comp_op (87)
    on left: 83 84 85 86 87 88 89 90, on right: 48 64
set_arith_op (88)
    on left: 91 92 93 94, on right: 66
set_unary_op (89)
    on left: 95, on right: 68
basic_addition_op (90)
    on left: 96 97, on right: 50
basic_multiplication_op (91)
    on left: 98 99 100, on right: 52
primary (92)
    on left: 101 102 103 104 105 106, on right: 8 9 79 80


state 0

    0 $accept: . program $end

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    FUNCTION        shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    program        go to state 17
    list           go to state 18
    list_basic     go to state 19
    func_decl      go to state 20
    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 24
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 1

   27 while_stmt: WHILE . LP expr RP block
   28           | WHILE . LP expr RP expr_stmt

    LP  shift, and go to state 53


state 2

   11 delete_stmt: SET_IDE . ARROW SET_DELETE LP RP SC
   37 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   63 set_assn: SET_IDE . ASSN_OP set_expr
   71 set_call: SET_IDE . ARROW LP argument_list RP
   75 set_basic: SET_IDE .
   79 set_pull: SET_IDE . PULL_OP primary SC
   80 set_push: SET_IDE . PUSH_OP primary SC

    ASSN_OP  shift, and go to state 54
    PULL_OP  shift, and go to state 55
    PUSH_OP  shift, and go to state 56
    ARROW    shift, and go to state 57

    $default  reduce using rule 75 (set_basic)


state 3

   44 string_assn: STR_IDE . ASSN_OP STRING
   45            | STR_IDE . ASSN_OP INPUT LP RP
   46            | STR_IDE . ASSN_OP INPUT LP STRING RP

    ASSN_OP  shift, and go to state 58


state 4

   29 for_stmt: FOR . LP assn_stmt expr expr RP block
   30         | FOR . LP assn_stmt expr expr RP expr_stmt
   32 iterative_for: FOR . LP IDENTIFIER COLON SET RP expr_stmt
   33              | FOR . LP IDENTIFIER COLON SET_IDE RP block
   34              | FOR . LP IDENTIFIER COLON SET RP block

    LP  shift, and go to state 59


state 5

   12 return_stmt: RETURN . expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr_stmt      go to state 62
    expr           go to state 34
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 6

   35 print_stmt: PRINT . LP expr RP SC
   36           | PRINT . LP STRING RP SC

    LP  shift, and go to state 63


state 7

   23 if_stmt: IF . LP expr RP stmt
   24        | IF . LP expr RP stmt ELSE stmt

    LP  shift, and go to state 64


state 8

    6 func_decl: FUNCTION . IDENTIFIER LP argument_list RP block
    7          | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 65


state 9

   47 number_assn: IDENTIFIER . ASSN_OP number_expr
   57 number_factor: IDENTIFIER .
   62 set_assn: IDENTIFIER . ASSN_OP set_expr
   77 call_expr: IDENTIFIER . LP argument_list RP
   78          | IDENTIFIER . LP RP

    ASSN_OP  shift, and go to state 66
    LP       shift, and go to state 67

    $default  reduce using rule 57 (number_factor)


state 10

   56 number_factor: NUMBER .

    $default  reduce using rule 56 (number_factor)


state 11

   74 set_basic: SET .

    $default  reduce using rule 74 (set_basic)


state 12

   60 number_factor: INPUT . LP RP
   61              | INPUT . LP STRING RP

    LP  shift, and go to state 68


state 13

   81 set_size: CARDINALITY_OP . SET_IDE
   82         | CARDINALITY_OP . SET

    SET_IDE  shift, and go to state 69
    SET      shift, and go to state 70


state 14

   95 set_unary_op: POWERSET_OP .

    $default  reduce using rule 95 (set_unary_op)


state 15

   58 number_factor: LP . number_expr RP
   76 set_basic: LP . set_expr RP

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    number_expr    go to state 71
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 72
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 16

   10 block: LB . list RB

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    FUNCTION        shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    list           go to state 73
    list_basic     go to state 19
    func_decl      go to state 20
    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 24
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 17

    0 $accept: program . $end

    $end  shift, and go to state 74


state 18

    1 program: list .
    3 list: list . list_basic

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    FUNCTION        shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    $default  reduce using rule 1 (program)

    list_basic     go to state 75
    func_decl      go to state 20
    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 24
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 19

    2 list: list_basic .

    $default  reduce using rule 2 (list)


state 20

    4 list_basic: func_decl .

    $default  reduce using rule 4 (list_basic)


state 21

   16 stmt: block .

    $default  reduce using rule 16 (stmt)


state 22

   20 stmt: delete_stmt .

    $default  reduce using rule 20 (stmt)


state 23

   15 stmt: return_stmt .

    $default  reduce using rule 15 (stmt)


state 24

    5 list_basic: stmt .

    $default  reduce using rule 5 (list_basic)


state 25

   22 stmt: if_stmt .

    $default  reduce using rule 22 (stmt)


state 26

   14 stmt: loop_stmt .

    $default  reduce using rule 14 (stmt)


state 27

   26 loop_stmt: while_stmt .

    $default  reduce using rule 26 (loop_stmt)


state 28

   25 loop_stmt: for_stmt .

    $default  reduce using rule 25 (loop_stmt)


state 29

   31 for_stmt: iterative_for .

    $default  reduce using rule 31 (for_stmt)


state 30

   19 stmt: print_stmt .

    $default  reduce using rule 19 (stmt)


state 31

   72 set_call: contain_expr .

    $default  reduce using rule 72 (set_call)


state 32

   21 stmt: assn_stmt .

    $default  reduce using rule 21 (stmt)


state 33

   13 stmt: expr_stmt .

    $default  reduce using rule 13 (stmt)


state 34

   41 expr_stmt: expr . SC

    SC  shift, and go to state 76


state 35

   38 assn_stmt: string_assn . SC

    SC  shift, and go to state 77


state 36

   40 assn_stmt: number_assn . SC

    SC  shift, and go to state 78


state 37

   42 expr: number_expr .
   48 number_expr: number_expr . general_comp_op number_addt

    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    $default  reduce using rule 42 (expr)

    general_comp_op  go to state 87


state 38

   49 number_expr: number_addt .
   50 number_addt: number_addt . basic_addition_op number_mult

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89

    $default  reduce using rule 49 (number_expr)

    basic_addition_op  go to state 90


state 39

   51 number_addt: number_mult .
   52 number_mult: number_mult . basic_multiplication_op number_call

    MULTIPLY_OP  shift, and go to state 91
    DIVIDE_OP    shift, and go to state 92
    MOD_OP       shift, and go to state 93

    $default  reduce using rule 51 (number_addt)

    basic_multiplication_op  go to state 94


state 40

   53 number_mult: number_call .

    $default  reduce using rule 53 (number_mult)


state 41

   55 number_call: number_factor .

    $default  reduce using rule 55 (number_call)


state 42

   39 assn_stmt: set_assn . SC

    SC  shift, and go to state 95


state 43

   43 expr: set_expr .
   64 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    $default  reduce using rule 43 (expr)

    general_comp_op  go to state 96


state 44

   65 set_expr: set_arith .
   66 set_arith: set_arith . set_arith_op set_unary

    DIFF_OP          shift, and go to state 97
    UNION_OP         shift, and go to state 98
    CARTESIAN_OP     shift, and go to state 99
    INTERSECTION_OP  shift, and go to state 100

    $default  reduce using rule 65 (set_expr)

    set_arith_op  go to state 101


state 45

   67 set_arith: set_unary .

    $default  reduce using rule 67 (set_arith)


state 46

   69 set_unary: set_call .

    $default  reduce using rule 69 (set_unary)


state 47

   73 set_call: set_basic .

    $default  reduce using rule 73 (set_call)


state 48

   54 number_call: call_expr .
   70 set_call: call_expr .

    SET_IDE          reduce using rule 54 (number_call)
    SET_IDE          [reduce using rule 70 (set_call)]
    IDENTIFIER       reduce using rule 54 (number_call)
    IDENTIFIER       [reduce using rule 70 (set_call)]
    NUMBER           reduce using rule 54 (number_call)
    NUMBER           [reduce using rule 70 (set_call)]
    SET              reduce using rule 54 (number_call)
    SET              [reduce using rule 70 (set_call)]
    INPUT            reduce using rule 54 (number_call)
    INPUT            [reduce using rule 70 (set_call)]
    DIFF_OP          reduce using rule 70 (set_call)
    UNION_OP         reduce using rule 70 (set_call)
    CARTESIAN_OP     reduce using rule 70 (set_call)
    INTERSECTION_OP  reduce using rule 70 (set_call)
    CARDINALITY_OP   reduce using rule 54 (number_call)
    CARDINALITY_OP   [reduce using rule 70 (set_call)]
    POWERSET_OP      reduce using rule 54 (number_call)
    POWERSET_OP      [reduce using rule 70 (set_call)]
    LP               reduce using rule 54 (number_call)
    LP               [reduce using rule 70 (set_call)]
    RP               reduce using rule 54 (number_call)
    RP               [reduce using rule 70 (set_call)]
    SC               reduce using rule 54 (number_call)
    SC               [reduce using rule 70 (set_call)]
    AND              reduce using rule 54 (number_call)
    AND              [reduce using rule 70 (set_call)]
    OR               reduce using rule 54 (number_call)
    OR               [reduce using rule 70 (set_call)]
    LT               reduce using rule 54 (number_call)
    LT               [reduce using rule 70 (set_call)]
    LEQ              reduce using rule 54 (number_call)
    LEQ              [reduce using rule 70 (set_call)]
    GT               reduce using rule 54 (number_call)
    GT               [reduce using rule 70 (set_call)]
    GEQ              reduce using rule 54 (number_call)
    GEQ              [reduce using rule 70 (set_call)]
    EE               reduce using rule 54 (number_call)
    EE               [reduce using rule 70 (set_call)]
    NE               reduce using rule 54 (number_call)
    NE               [reduce using rule 70 (set_call)]
    $default         reduce using rule 54 (number_call)


state 49

   17 stmt: set_pull .

    $default  reduce using rule 17 (stmt)


state 50

   18 stmt: set_push .

    $default  reduce using rule 18 (stmt)


state 51

   59 number_factor: set_size .

    $default  reduce using rule 59 (number_factor)


state 52

   68 set_unary: set_unary_op . set_call

    SET_IDE     shift, and go to state 60
    IDENTIFIER  shift, and go to state 102
    SET         shift, and go to state 11
    LP          shift, and go to state 103

    contain_expr  go to state 31
    set_call      go to state 104
    set_basic     go to state 47
    call_expr     go to state 105


state 53

   27 while_stmt: WHILE LP . expr RP block
   28           | WHILE LP . expr RP expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr           go to state 106
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 54

   63 set_assn: SET_IDE ASSN_OP . set_expr

    SET_IDE      shift, and go to state 60
    IDENTIFIER   shift, and go to state 102
    SET          shift, and go to state 11
    POWERSET_OP  shift, and go to state 14
    LP           shift, and go to state 103

    contain_expr  go to state 31
    set_expr      go to state 107
    set_arith     go to state 44
    set_unary     go to state 45
    set_call      go to state 46
    set_basic     go to state 47
    call_expr     go to state 105
    set_unary_op  go to state 52


state 55

   79 set_pull: SET_IDE PULL_OP . primary SC

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113

    primary  go to state 114


state 56

   80 set_push: SET_IDE PUSH_OP . primary SC

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113

    primary  go to state 115


state 57

   11 delete_stmt: SET_IDE ARROW . SET_DELETE LP RP SC
   37 contain_expr: SET_IDE ARROW . SET_CONTAINS LP argument_list RP
   71 set_call: SET_IDE ARROW . LP argument_list RP

    SET_CONTAINS  shift, and go to state 116
    SET_DELETE    shift, and go to state 117
    LP            shift, and go to state 118


state 58

   44 string_assn: STR_IDE ASSN_OP . STRING
   45            | STR_IDE ASSN_OP . INPUT LP RP
   46            | STR_IDE ASSN_OP . INPUT LP STRING RP

    STRING  shift, and go to state 119
    INPUT   shift, and go to state 120


state 59

   29 for_stmt: FOR LP . assn_stmt expr expr RP block
   30         | FOR LP . assn_stmt expr expr RP expr_stmt
   32 iterative_for: FOR LP . IDENTIFIER COLON SET RP expr_stmt
   33              | FOR LP . IDENTIFIER COLON SET_IDE RP block
   34              | FOR LP . IDENTIFIER COLON SET RP block

    SET_IDE     shift, and go to state 121
    STR_IDE     shift, and go to state 3
    IDENTIFIER  shift, and go to state 122

    assn_stmt    go to state 123
    string_assn  go to state 35
    number_assn  go to state 36
    set_assn     go to state 42


state 60

   37 contain_expr: SET_IDE . ARROW SET_CONTAINS LP argument_list RP
   71 set_call: SET_IDE . ARROW LP argument_list RP
   75 set_basic: SET_IDE .

    ARROW  shift, and go to state 124

    $default  reduce using rule 75 (set_basic)


state 61

   57 number_factor: IDENTIFIER .
   77 call_expr: IDENTIFIER . LP argument_list RP
   78          | IDENTIFIER . LP RP

    LP  shift, and go to state 67

    LP        [reduce using rule 57 (number_factor)]
    $default  reduce using rule 57 (number_factor)


state 62

   12 return_stmt: RETURN expr_stmt .

    $default  reduce using rule 12 (return_stmt)


state 63

   35 print_stmt: PRINT LP . expr RP SC
   36           | PRINT LP . STRING RP SC

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    STRING          shift, and go to state 125
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr           go to state 126
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 64

   23 if_stmt: IF LP . expr RP stmt
   24        | IF LP . expr RP stmt ELSE stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr           go to state 127
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 65

    6 func_decl: FUNCTION IDENTIFIER . LP argument_list RP block
    7          | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 128


state 66

   47 number_assn: IDENTIFIER ASSN_OP . number_expr
   62 set_assn: IDENTIFIER ASSN_OP . set_expr

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    number_expr    go to state 129
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 130
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 67

   77 call_expr: IDENTIFIER LP . argument_list RP
   78          | IDENTIFIER LP . RP

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113
    RP          shift, and go to state 131

    argument_list  go to state 132
    primary        go to state 133


state 68

   60 number_factor: INPUT LP . RP
   61              | INPUT LP . STRING RP

    STRING  shift, and go to state 134
    RP      shift, and go to state 135


state 69

   81 set_size: CARDINALITY_OP SET_IDE .

    $default  reduce using rule 81 (set_size)


state 70

   82 set_size: CARDINALITY_OP SET .

    $default  reduce using rule 82 (set_size)


state 71

   48 number_expr: number_expr . general_comp_op number_addt
   58 number_factor: LP number_expr . RP

    RP   shift, and go to state 136
    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    general_comp_op  go to state 87


state 72

   64 set_expr: set_expr . general_comp_op set_arith
   76 set_basic: LP set_expr . RP

    RP   shift, and go to state 137
    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    general_comp_op  go to state 96


state 73

    3 list: list . list_basic
   10 block: LB list . RB

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    FUNCTION        shift, and go to state 8
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16
    RB              shift, and go to state 138

    list_basic     go to state 75
    func_decl      go to state 20
    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 24
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 74

    0 $accept: program $end .

    $default  accept


state 75

    3 list: list list_basic .

    $default  reduce using rule 3 (list)


state 76

   41 expr_stmt: expr SC .

    $default  reduce using rule 41 (expr_stmt)


state 77

   38 assn_stmt: string_assn SC .

    $default  reduce using rule 38 (assn_stmt)


state 78

   40 assn_stmt: number_assn SC .

    $default  reduce using rule 40 (assn_stmt)


state 79

   90 general_comp_op: AND .

    $default  reduce using rule 90 (general_comp_op)


state 80

   89 general_comp_op: OR .

    $default  reduce using rule 89 (general_comp_op)


state 81

   83 general_comp_op: LT .

    $default  reduce using rule 83 (general_comp_op)


state 82

   84 general_comp_op: LEQ .

    $default  reduce using rule 84 (general_comp_op)


state 83

   85 general_comp_op: GT .

    $default  reduce using rule 85 (general_comp_op)


state 84

   86 general_comp_op: GEQ .

    $default  reduce using rule 86 (general_comp_op)


state 85

   87 general_comp_op: EE .

    $default  reduce using rule 87 (general_comp_op)


state 86

   88 general_comp_op: NE .

    $default  reduce using rule 88 (general_comp_op)


state 87

   48 number_expr: number_expr general_comp_op . number_addt

    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    LP              shift, and go to state 139

    number_addt    go to state 140
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    call_expr      go to state 141
    set_size       go to state 51


state 88

   96 basic_addition_op: PLUS_OP .

    $default  reduce using rule 96 (basic_addition_op)


state 89

   97 basic_addition_op: MINUS_OP .

    $default  reduce using rule 97 (basic_addition_op)


state 90

   50 number_addt: number_addt basic_addition_op . number_mult

    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    LP              shift, and go to state 139

    number_mult    go to state 142
    number_call    go to state 40
    number_factor  go to state 41
    call_expr      go to state 141
    set_size       go to state 51


state 91

   98 basic_multiplication_op: MULTIPLY_OP .

    $default  reduce using rule 98 (basic_multiplication_op)


state 92

   99 basic_multiplication_op: DIVIDE_OP .

    $default  reduce using rule 99 (basic_multiplication_op)


state 93

  100 basic_multiplication_op: MOD_OP .

    $default  reduce using rule 100 (basic_multiplication_op)


state 94

   52 number_mult: number_mult basic_multiplication_op . number_call

    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    LP              shift, and go to state 139

    number_call    go to state 143
    number_factor  go to state 41
    call_expr      go to state 141
    set_size       go to state 51


state 95

   39 assn_stmt: set_assn SC .

    $default  reduce using rule 39 (assn_stmt)


state 96

   64 set_expr: set_expr general_comp_op . set_arith

    SET_IDE      shift, and go to state 60
    IDENTIFIER   shift, and go to state 102
    SET          shift, and go to state 11
    POWERSET_OP  shift, and go to state 14
    LP           shift, and go to state 103

    contain_expr  go to state 31
    set_arith     go to state 144
    set_unary     go to state 45
    set_call      go to state 46
    set_basic     go to state 47
    call_expr     go to state 105
    set_unary_op  go to state 52


state 97

   93 set_arith_op: DIFF_OP .

    $default  reduce using rule 93 (set_arith_op)


state 98

   91 set_arith_op: UNION_OP .

    $default  reduce using rule 91 (set_arith_op)


state 99

   94 set_arith_op: CARTESIAN_OP .

    $default  reduce using rule 94 (set_arith_op)


state 100

   92 set_arith_op: INTERSECTION_OP .

    $default  reduce using rule 92 (set_arith_op)


state 101

   66 set_arith: set_arith set_arith_op . set_unary

    SET_IDE      shift, and go to state 60
    IDENTIFIER   shift, and go to state 102
    SET          shift, and go to state 11
    POWERSET_OP  shift, and go to state 14
    LP           shift, and go to state 103

    contain_expr  go to state 31
    set_unary     go to state 145
    set_call      go to state 46
    set_basic     go to state 47
    call_expr     go to state 105
    set_unary_op  go to state 52


state 102

   77 call_expr: IDENTIFIER . LP argument_list RP
   78          | IDENTIFIER . LP RP

    LP  shift, and go to state 67


state 103

   76 set_basic: LP . set_expr RP

    SET_IDE      shift, and go to state 60
    IDENTIFIER   shift, and go to state 102
    SET          shift, and go to state 11
    POWERSET_OP  shift, and go to state 14
    LP           shift, and go to state 103

    contain_expr  go to state 31
    set_expr      go to state 72
    set_arith     go to state 44
    set_unary     go to state 45
    set_call      go to state 46
    set_basic     go to state 47
    call_expr     go to state 105
    set_unary_op  go to state 52


state 104

   68 set_unary: set_unary_op set_call .

    $default  reduce using rule 68 (set_unary)


state 105

   70 set_call: call_expr .

    $default  reduce using rule 70 (set_call)


state 106

   27 while_stmt: WHILE LP expr . RP block
   28           | WHILE LP expr . RP expr_stmt

    RP  shift, and go to state 146


state 107

   63 set_assn: SET_IDE ASSN_OP set_expr .
   64 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    $default  reduce using rule 63 (set_assn)

    general_comp_op  go to state 96


state 108

  105 primary: SET_IDE .

    $default  reduce using rule 105 (primary)


state 109

  106 primary: STR_IDE .

    $default  reduce using rule 106 (primary)


state 110

  104 primary: IDENTIFIER .

    $default  reduce using rule 104 (primary)


state 111

  101 primary: NUMBER .

    $default  reduce using rule 101 (primary)


state 112

  102 primary: STRING .

    $default  reduce using rule 102 (primary)


state 113

  103 primary: SET .

    $default  reduce using rule 103 (primary)


state 114

   79 set_pull: SET_IDE PULL_OP primary . SC

    SC  shift, and go to state 147


state 115

   80 set_push: SET_IDE PUSH_OP primary . SC

    SC  shift, and go to state 148


state 116

   37 contain_expr: SET_IDE ARROW SET_CONTAINS . LP argument_list RP

    LP  shift, and go to state 149


state 117

   11 delete_stmt: SET_IDE ARROW SET_DELETE . LP RP SC

    LP  shift, and go to state 150


state 118

   71 set_call: SET_IDE ARROW LP . argument_list RP

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113

    argument_list  go to state 151
    primary        go to state 133


state 119

   44 string_assn: STR_IDE ASSN_OP STRING .

    $default  reduce using rule 44 (string_assn)


state 120

   45 string_assn: STR_IDE ASSN_OP INPUT . LP RP
   46            | STR_IDE ASSN_OP INPUT . LP STRING RP

    LP  shift, and go to state 152


state 121

   63 set_assn: SET_IDE . ASSN_OP set_expr

    ASSN_OP  shift, and go to state 54


state 122

   32 iterative_for: FOR LP IDENTIFIER . COLON SET RP expr_stmt
   33              | FOR LP IDENTIFIER . COLON SET_IDE RP block
   34              | FOR LP IDENTIFIER . COLON SET RP block
   47 number_assn: IDENTIFIER . ASSN_OP number_expr
   62 set_assn: IDENTIFIER . ASSN_OP set_expr

    ASSN_OP  shift, and go to state 66
    COLON    shift, and go to state 153


state 123

   29 for_stmt: FOR LP assn_stmt . expr expr RP block
   30         | FOR LP assn_stmt . expr expr RP expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr           go to state 154
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 124

   37 contain_expr: SET_IDE ARROW . SET_CONTAINS LP argument_list RP
   71 set_call: SET_IDE ARROW . LP argument_list RP

    SET_CONTAINS  shift, and go to state 116
    LP            shift, and go to state 118


state 125

   36 print_stmt: PRINT LP STRING . RP SC

    RP  shift, and go to state 155


state 126

   35 print_stmt: PRINT LP expr . RP SC

    RP  shift, and go to state 156


state 127

   23 if_stmt: IF LP expr . RP stmt
   24        | IF LP expr . RP stmt ELSE stmt

    RP  shift, and go to state 157


state 128

    6 func_decl: FUNCTION IDENTIFIER LP . argument_list RP block
    7          | FUNCTION IDENTIFIER LP . RP block

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113
    RP          shift, and go to state 158

    argument_list  go to state 159
    primary        go to state 133


state 129

   47 number_assn: IDENTIFIER ASSN_OP number_expr .
   48 number_expr: number_expr . general_comp_op number_addt

    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    $default  reduce using rule 47 (number_assn)

    general_comp_op  go to state 87


state 130

   62 set_assn: IDENTIFIER ASSN_OP set_expr .
   64 set_expr: set_expr . general_comp_op set_arith

    AND  shift, and go to state 79
    OR   shift, and go to state 80
    LT   shift, and go to state 81
    LEQ  shift, and go to state 82
    GT   shift, and go to state 83
    GEQ  shift, and go to state 84
    EE   shift, and go to state 85
    NE   shift, and go to state 86

    $default  reduce using rule 62 (set_assn)

    general_comp_op  go to state 96


state 131

   78 call_expr: IDENTIFIER LP RP .

    $default  reduce using rule 78 (call_expr)


state 132

    9 argument_list: argument_list . COMMA primary
   77 call_expr: IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 160
    COMMA  shift, and go to state 161


state 133

    8 argument_list: primary .

    $default  reduce using rule 8 (argument_list)


state 134

   61 number_factor: INPUT LP STRING . RP

    RP  shift, and go to state 162


state 135

   60 number_factor: INPUT LP RP .

    $default  reduce using rule 60 (number_factor)


state 136

   58 number_factor: LP number_expr RP .

    $default  reduce using rule 58 (number_factor)


state 137

   76 set_basic: LP set_expr RP .

    $default  reduce using rule 76 (set_basic)


state 138

   10 block: LB list RB .

    $default  reduce using rule 10 (block)


state 139

   58 number_factor: LP . number_expr RP

    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    LP              shift, and go to state 139

    number_expr    go to state 71
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    call_expr      go to state 141
    set_size       go to state 51


state 140

   48 number_expr: number_expr general_comp_op number_addt .
   50 number_addt: number_addt . basic_addition_op number_mult

    PLUS_OP   shift, and go to state 88
    MINUS_OP  shift, and go to state 89

    $default  reduce using rule 48 (number_expr)

    basic_addition_op  go to state 90


state 141

   54 number_call: call_expr .

    $default  reduce using rule 54 (number_call)


state 142

   50 number_addt: number_addt basic_addition_op number_mult .
   52 number_mult: number_mult . basic_multiplication_op number_call

    MULTIPLY_OP  shift, and go to state 91
    DIVIDE_OP    shift, and go to state 92
    MOD_OP       shift, and go to state 93

    $default  reduce using rule 50 (number_addt)

    basic_multiplication_op  go to state 94


state 143

   52 number_mult: number_mult basic_multiplication_op number_call .

    $default  reduce using rule 52 (number_mult)


state 144

   64 set_expr: set_expr general_comp_op set_arith .
   66 set_arith: set_arith . set_arith_op set_unary

    DIFF_OP          shift, and go to state 97
    UNION_OP         shift, and go to state 98
    CARTESIAN_OP     shift, and go to state 99
    INTERSECTION_OP  shift, and go to state 100

    $default  reduce using rule 64 (set_expr)

    set_arith_op  go to state 101


state 145

   66 set_arith: set_arith set_arith_op set_unary .

    $default  reduce using rule 66 (set_arith)


state 146

   27 while_stmt: WHILE LP expr RP . block
   28           | WHILE LP expr RP . expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    block          go to state 163
    contain_expr   go to state 31
    expr_stmt      go to state 164
    expr           go to state 34
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 147

   79 set_pull: SET_IDE PULL_OP primary SC .

    $default  reduce using rule 79 (set_pull)


state 148

   80 set_push: SET_IDE PUSH_OP primary SC .

    $default  reduce using rule 80 (set_push)


state 149

   37 contain_expr: SET_IDE ARROW SET_CONTAINS LP . argument_list RP

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113

    argument_list  go to state 165
    primary        go to state 133


state 150

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP . RP SC

    RP  shift, and go to state 166


state 151

    9 argument_list: argument_list . COMMA primary
   71 set_call: SET_IDE ARROW LP argument_list . RP

    RP     shift, and go to state 167
    COMMA  shift, and go to state 161


state 152

   45 string_assn: STR_IDE ASSN_OP INPUT LP . RP
   46            | STR_IDE ASSN_OP INPUT LP . STRING RP

    STRING  shift, and go to state 168
    RP      shift, and go to state 169


state 153

   32 iterative_for: FOR LP IDENTIFIER COLON . SET RP expr_stmt
   33              | FOR LP IDENTIFIER COLON . SET_IDE RP block
   34              | FOR LP IDENTIFIER COLON . SET RP block

    SET_IDE  shift, and go to state 170
    SET      shift, and go to state 171


state 154

   29 for_stmt: FOR LP assn_stmt expr . expr RP block
   30         | FOR LP assn_stmt expr . expr RP expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15

    contain_expr   go to state 31
    expr           go to state 172
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 155

   36 print_stmt: PRINT LP STRING RP . SC

    SC  shift, and go to state 173


state 156

   35 print_stmt: PRINT LP expr RP . SC

    SC  shift, and go to state 174


state 157

   23 if_stmt: IF LP expr RP . stmt
   24        | IF LP expr RP . stmt ELSE stmt

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 175
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 158

    7 func_decl: FUNCTION IDENTIFIER LP RP . block

    LB  shift, and go to state 16

    block  go to state 176


state 159

    6 func_decl: FUNCTION IDENTIFIER LP argument_list . RP block
    9 argument_list: argument_list . COMMA primary

    RP     shift, and go to state 177
    COMMA  shift, and go to state 161


state 160

   77 call_expr: IDENTIFIER LP argument_list RP .

    $default  reduce using rule 77 (call_expr)


state 161

    9 argument_list: argument_list COMMA . primary

    SET_IDE     shift, and go to state 108
    STR_IDE     shift, and go to state 109
    IDENTIFIER  shift, and go to state 110
    NUMBER      shift, and go to state 111
    STRING      shift, and go to state 112
    SET         shift, and go to state 113

    primary  go to state 178


state 162

   61 number_factor: INPUT LP STRING RP .

    $default  reduce using rule 61 (number_factor)


state 163

   27 while_stmt: WHILE LP expr RP block .

    $default  reduce using rule 27 (while_stmt)


state 164

   28 while_stmt: WHILE LP expr RP expr_stmt .

    $default  reduce using rule 28 (while_stmt)


state 165

    9 argument_list: argument_list . COMMA primary
   37 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list . RP

    RP     shift, and go to state 179
    COMMA  shift, and go to state 161


state 166

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP . SC

    SC  shift, and go to state 180


state 167

   71 set_call: SET_IDE ARROW LP argument_list RP .

    $default  reduce using rule 71 (set_call)


state 168

   46 string_assn: STR_IDE ASSN_OP INPUT LP STRING . RP

    RP  shift, and go to state 181


state 169

   45 string_assn: STR_IDE ASSN_OP INPUT LP RP .

    $default  reduce using rule 45 (string_assn)


state 170

   33 iterative_for: FOR LP IDENTIFIER COLON SET_IDE . RP block

    RP  shift, and go to state 182


state 171

   32 iterative_for: FOR LP IDENTIFIER COLON SET . RP expr_stmt
   34              | FOR LP IDENTIFIER COLON SET . RP block

    RP  shift, and go to state 183


state 172

   29 for_stmt: FOR LP assn_stmt expr expr . RP block
   30         | FOR LP assn_stmt expr expr . RP expr_stmt

    RP  shift, and go to state 184


state 173

   36 print_stmt: PRINT LP STRING RP SC .

    $default  reduce using rule 36 (print_stmt)


state 174

   35 print_stmt: PRINT LP expr RP SC .

    $default  reduce using rule 35 (print_stmt)


state 175

   23 if_stmt: IF LP expr RP stmt .
   24        | IF LP expr RP stmt . ELSE stmt

    ELSE  shift, and go to state 185

    $default  reduce using rule 23 (if_stmt)


state 176

    7 func_decl: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 7 (func_decl)


state 177

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP . block

    LB  shift, and go to state 16

    block  go to state 186


state 178

    9 argument_list: argument_list COMMA primary .

    $default  reduce using rule 9 (argument_list)


state 179

   37 contain_expr: SET_IDE ARROW SET_CONTAINS LP argument_list RP .

    $default  reduce using rule 37 (contain_expr)


state 180

   11 delete_stmt: SET_IDE ARROW SET_DELETE LP RP SC .

    $default  reduce using rule 11 (delete_stmt)


state 181

   46 string_assn: STR_IDE ASSN_OP INPUT LP STRING RP .

    $default  reduce using rule 46 (string_assn)


state 182

   33 iterative_for: FOR LP IDENTIFIER COLON SET_IDE RP . block

    LB  shift, and go to state 16

    block  go to state 187


state 183

   32 iterative_for: FOR LP IDENTIFIER COLON SET RP . expr_stmt
   34              | FOR LP IDENTIFIER COLON SET RP . block

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    block          go to state 188
    contain_expr   go to state 31
    expr_stmt      go to state 189
    expr           go to state 34
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 184

   29 for_stmt: FOR LP assn_stmt expr expr RP . block
   30         | FOR LP assn_stmt expr expr RP . expr_stmt

    SET_IDE         shift, and go to state 60
    IDENTIFIER      shift, and go to state 61
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    block          go to state 190
    contain_expr   go to state 31
    expr_stmt      go to state 191
    expr           go to state 34
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_size       go to state 51
    set_unary_op   go to state 52


state 185

   24 if_stmt: IF LP expr RP stmt ELSE . stmt

    WHILE           shift, and go to state 1
    SET_IDE         shift, and go to state 2
    STR_IDE         shift, and go to state 3
    FOR             shift, and go to state 4
    RETURN          shift, and go to state 5
    PRINT           shift, and go to state 6
    IF              shift, and go to state 7
    IDENTIFIER      shift, and go to state 9
    NUMBER          shift, and go to state 10
    SET             shift, and go to state 11
    INPUT           shift, and go to state 12
    CARDINALITY_OP  shift, and go to state 13
    POWERSET_OP     shift, and go to state 14
    LP              shift, and go to state 15
    LB              shift, and go to state 16

    block          go to state 21
    delete_stmt    go to state 22
    return_stmt    go to state 23
    stmt           go to state 192
    if_stmt        go to state 25
    loop_stmt      go to state 26
    while_stmt     go to state 27
    for_stmt       go to state 28
    iterative_for  go to state 29
    print_stmt     go to state 30
    contain_expr   go to state 31
    assn_stmt      go to state 32
    expr_stmt      go to state 33
    expr           go to state 34
    string_assn    go to state 35
    number_assn    go to state 36
    number_expr    go to state 37
    number_addt    go to state 38
    number_mult    go to state 39
    number_call    go to state 40
    number_factor  go to state 41
    set_assn       go to state 42
    set_expr       go to state 43
    set_arith      go to state 44
    set_unary      go to state 45
    set_call       go to state 46
    set_basic      go to state 47
    call_expr      go to state 48
    set_pull       go to state 49
    set_push       go to state 50
    set_size       go to state 51
    set_unary_op   go to state 52


state 186

    6 func_decl: FUNCTION IDENTIFIER LP argument_list RP block .

    $default  reduce using rule 6 (func_decl)


state 187

   33 iterative_for: FOR LP IDENTIFIER COLON SET_IDE RP block .

    $default  reduce using rule 33 (iterative_for)


state 188

   34 iterative_for: FOR LP IDENTIFIER COLON SET RP block .

    $default  reduce using rule 34 (iterative_for)


state 189

   32 iterative_for: FOR LP IDENTIFIER COLON SET RP expr_stmt .

    $default  reduce using rule 32 (iterative_for)


state 190

   29 for_stmt: FOR LP assn_stmt expr expr RP block .

    $default  reduce using rule 29 (for_stmt)


state 191

   30 for_stmt: FOR LP assn_stmt expr expr RP expr_stmt .

    $default  reduce using rule 30 (for_stmt)


state 192

   24 if_stmt: IF LP expr RP stmt ELSE stmt .

    $default  reduce using rule 24 (if_stmt)
